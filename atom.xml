<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Michael的技术探索与点滴记录~</title>
  
  <subtitle>Michael&#39;s Pages</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://coder-michael.tk/"/>
  <updated>2019-05-07T09:41:15.925Z</updated>
  <id>http://coder-michael.tk/</id>
  
  <author>
    <name>Michael Wu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS7下Docker安装与配置</title>
    <link href="http://coder-michael.tk/2019/05/07/Docker/CentOS7%E4%B8%8BDocker%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://coder-michael.tk/2019/05/07/Docker/CentOS7下Docker安装与配置/</id>
    <published>2019-05-07T11:20:42.000Z</published>
    <updated>2019-05-07T09:41:15.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-主机名配置"><a href="#1-主机名配置" class="headerlink" title="1. 主机名配置"></a>1. 主机名配置</h2><p>因为K8S的规定，主机名只支持包含 - 和 .(中横线和点)两种特殊符号，并且主机名不能出现重复。</p><h2 id="2-Hosts"><a href="#2-Hosts" class="headerlink" title="2. Hosts"></a>2. Hosts</h2><p>配置每台主机的hosts(/etc/hosts),添加host_ip $hostname到/etc/hosts文件中。</p><h2 id="3-CentOS关闭selinux"><a href="#3-CentOS关闭selinux" class="headerlink" title="3. CentOS关闭selinux"></a>3. CentOS关闭selinux</h2><p><code>sudo sed -i &#39;s/SELINUX=enforcing/SELINUX=disabled/g&#39; /etc/selinux/config</code></p><a id="more"></a><h2 id="4-关闭防火墙-可选-或者放行相应端口"><a href="#4-关闭防火墙-可选-或者放行相应端口" class="headerlink" title="4. 关闭防火墙(可选)或者放行相应端口"></a>4. 关闭防火墙(可选)或者放行相应端口</h2><p>对于刚刚接触Rancher的用户，建议在关闭防火墙的测试环境或桌面虚拟机来运行rancher，以避免出现网络通信问题。</p><ul><li>关闭防火墙<br>1、CentOS<br><code>systemctl stop firewalld.service &amp;&amp; systemctl disable firewalld.service</code><br>2、Ubuntu<br><code>ufw disable</code></li></ul><h2 id="5-配置主机时间、时区、系统语言"><a href="#5-配置主机时间、时区、系统语言" class="headerlink" title="5. 配置主机时间、时区、系统语言"></a>5. 配置主机时间、时区、系统语言</h2><ul><li>查看时区<br><code>date -R</code>或者<code>timedatectl</code></li><li>修改时区<br><code>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></li><li>修改系统语言环境<br><code>sudo echo &#39;LANG=&quot;en_US.UTF-8&quot;&#39; &gt;&gt; /etc/profile;source /etc/profile</code></li><li>配置主机NTP时间同步</li></ul><h2 id="6-Kernel性能调优"><a href="#6-Kernel性能调优" class="headerlink" title="6. Kernel性能调优"></a>6. Kernel性能调优</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/sysctl.conf &lt;&lt;EOF</span><br><span class="line">vm.swappiness = 10</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.bridge.bridge-nf-call-arptables = 1</span><br><span class="line">net.ipv4.neigh.default.gc_thresh1=4096</span><br><span class="line">net.ipv4.neigh.default.gc_thresh2=6144</span><br><span class="line">net.ipv4.neigh.default.gc_thresh3=8192</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p>数值根据实际环境自行配置，最后执行sysctl -p保存配置。</p></blockquote><h2 id="7-内核模块检查"><a href="#7-内核模块检查" class="headerlink" title="7. 内核模块检查"></a>7. 内核模块检查</h2><blockquote><p>模块查询: lsmod | grep &lt;模块名&gt;<br>模块加载: modprobe &lt;模块名&gt;</p></blockquote><h2 id="8-ETCD集群容错"><a href="#8-ETCD集群容错" class="headerlink" title="8. ETCD集群容错"></a>8. ETCD集群容错</h2><p>建议在ETCD集群中使用奇数个成员,通过添加额外成员可以获得更高的失败容错。具体详情可以查阅<a href="https://coreos.com/etcd/docs/latest/v2/admin_guide.html#optimal-cluster-size" target="_blank" rel="noopener">optimal-cluster-size</a>。</p><h2 id="Docker安装与配置"><a href="#Docker安装与配置" class="headerlink" title="Docker安装与配置"></a>Docker安装与配置</h2><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><ul><li>修改系统yum源<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br><span class="line">cat &gt; /etc/yum.repos.d/CentOS-Base.repo &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">[base]</span><br><span class="line">name=CentOS-$releasever - Base - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/$releasever/os/$basearch/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/$releasever/os/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#released updates</span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-$releasever - Updates - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/$releasever/updates/$basearch/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/$releasever/updates/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#additional packages that may be useful</span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-$releasever - Extras - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/$releasever/extras/$basearch/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/$releasever/extras/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#additional packages that extend functionality of existing packages</span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-$releasever - Plus - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#contrib - packages by Centos Users</span><br><span class="line">[contrib]</span><br><span class="line">name=CentOS-$releasever - Contrib - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/contrib/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/$releasever/contrib/$basearch/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/$releasever/contrib/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><h2 id="Docker-ce安装"><a href="#Docker-ce安装" class="headerlink" title="Docker-ce安装"></a>Docker-ce安装</h2><blockquote><p>因为CentOS的安全限制，通过RKE安装K8S集群时候无法使用root账户。所以，建议CentOS用户使用非root用户来运行docker,不管是RKE还是custom安装k8s,详情查看<a href="https://www.cnrancher.com/docs/rancher/v2.x/cn/faq/troubleshooting-ha/ssh-tunneling/" target="_blank" rel="noopener">无法为主机配置SSH隧道</a>。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># 添加用户(可选)</span><br><span class="line">sudo adduser `&lt;new_user&gt;`</span><br><span class="line"># 为新用户设置密码</span><br><span class="line">sudo passwd `&lt;new_user&gt;`</span><br><span class="line"># 为新用户添加sudo权限</span><br><span class="line">sudo echo &apos;&lt;new_user&gt; ALL=(ALL) ALL&apos; &gt;&gt; /etc/sudoers</span><br><span class="line"># 卸载旧版本Docker软件</span><br><span class="line">sudo yum remove docker \</span><br><span class="line">              docker-client \</span><br><span class="line">              docker-client-latest \</span><br><span class="line">              docker-common \</span><br><span class="line">              docker-latest \</span><br><span class="line">              docker-latest-logrotate \</span><br><span class="line">              docker-logrotate \</span><br><span class="line">              docker-selinux \</span><br><span class="line">              docker-engine-selinux \</span><br><span class="line">              docker-engine \</span><br><span class="line">              container*</span><br><span class="line"># 定义安装版本</span><br><span class="line">export docker_version=18.06.2.ce-3.el7</span><br><span class="line"># step 1: 安装必要的一些系统工具</span><br><span class="line">sudo yum update -y</span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2 bash-completion</span><br><span class="line"># Step 2: 添加软件源信息</span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"># Step 3: 更新并安装 Docker-CE</span><br><span class="line">sudo yum clean all;yum makecache all</span><br><span class="line">version=$(yum list docker-ce.x86_64 --showduplicates | sort -r|grep $&#123;docker_version&#125;|awk &apos;&#123;print $2&#125;&apos;)</span><br><span class="line">sudo yum -y install --setopt=obsoletes=0 docker-ce-$&#123;version&#125; docker-ce-selinux-$&#123;version&#125;</span><br><span class="line"># 如果已经安装高版本Docker,可进行降级安装(可选)</span><br><span class="line">yum downgrade --setopt=obsoletes=0 -y docker-ce-$&#123;version&#125; docker-ce-selinux-$&#123;version&#125;</span><br><span class="line"># 把当前用户加入docker组</span><br><span class="line">sudo usermod -aG docker `&lt;new_user&gt;`</span><br><span class="line"># 设置开机启动</span><br><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><h2 id="Docker配置"><a href="#Docker配置" class="headerlink" title="Docker配置"></a>Docker配置</h2><p>对于通过systemd来管理服务的系统(比如CentOS7.X、Ubuntu16.X), Docker有两处可以配置参数: 一个是docker.service服务配置文件,一个是Docker daemon配置文件daemon.json。</p><ul><li><p>docker.service<br>对于CentOS系统，docker.service默认位于<code>/usr/lib/systemd/system/docker.service</code>；对于Ubuntu系统，docker.service默认位于<code>/lib/systemd/system/docker.service</code><br>使用此参数<code>--graph=/apps/data/docker</code>调整Docker镜像和container的存放目录。</p></li><li><p>daemon.json<br>daemon.json默认位于<code>/etc/docker/daemon.json</code>，如果没有可手动创建，基于systemd管理的系统都是相同的路径。通过修改daemon.json来改过Docker配置，也是Docker官方推荐的方法。</p></li></ul><blockquote><p>以下说明均基于systemd,并通过<code>/etc/docker/daemon.json</code>来修改配置。</p></blockquote><h3 id="配置镜像下载和上传并发数"><a href="#配置镜像下载和上传并发数" class="headerlink" title="配置镜像下载和上传并发数"></a>配置镜像下载和上传并发数</h3><p>从Docker1.12开始，支持自定义下载和上传镜像的并发数，默认值上传为3个并发，下载为5个并发。通过添加”max-concurrent-downloads”和”max-concurrent-uploads”参数对其修改:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;max-concurrent-downloads&quot;: 3,</span><br><span class="line">&quot;max-concurrent-uploads&quot;: 5</span><br></pre></td></tr></table></figure></p><h3 id="配置镜像加速地址"><a href="#配置镜像加速地址" class="headerlink" title="配置镜像加速地址"></a>配置镜像加速地址</h3><blockquote><p>Rancher从v1.6.15开始到v2.x.x,Rancher系统相关的所有镜像(包括1.6.x上的K8S镜像)都托管在Dockerhub仓库。Dockerhub节点在国外，国内直接拉取镜像会有些缓慢。为了加速镜像的下载，可以给Docker配置国内的镜像地址。<br>编辑/etc/docker/daemon.json加入以下内容:<br>{<br>“registry-mirrors”: [“<a href="https://7bezldxe.mirror.aliyuncs.com/&quot;,&quot;https://IP:PORT/&quot;]" target="_blank" rel="noopener">https://7bezldxe.mirror.aliyuncs.com/&quot;,&quot;https://IP:PORT/&quot;]</a><br>}<br>可以设置多个registry-mirrors地址，以数组形式书写，地址需要添加协议头(https或者http)。</p></blockquote><h3 id="配置insecure-registries-私有仓库"><a href="#配置insecure-registries-私有仓库" class="headerlink" title="配置insecure-registries 私有仓库"></a>配置insecure-registries 私有仓库</h3><p>Docker默认只信任TLS加密的仓库地址(https)，所有非https仓库默认无法登陆也无法拉取镜像。insecure-registries字面意思为不安全的仓库，通过添加这个参数对非https仓库进行授信。可以设置多个insecure-registries地址，以数组形式书写，地址不能添加协议头(http)。  </p><p>编辑/etc/docker/daemon.json加入以下内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;insecure-registries&quot;: [&quot;192.168.1.100&quot;,&quot;IP:PORT&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="配置Docker存储驱动"><a href="#配置Docker存储驱动" class="headerlink" title="配置Docker存储驱动"></a>配置Docker存储驱动</h3><p>OverlayFS是一个新一代的联合文件系统，类似于AUFS，但速度更快，实现更简单。Docker为OverlayFS提供了两个存储驱动程序:旧版的<code>overlay</code>，新版的<code>overlay2</code>(更稳定)。</p><p>先决条件:</p><ul><li>overlay2: Linux内核版本4.0或更高版本，或使用内核版本3.10.0-514+的RHEL或CentOS。</li><li>overlay: 主机Linux内核版本3.18+</li><li>支持的磁盘文件系统</li><li><ul><li>ext4(仅限RHEL 7.1)</li></ul></li><li><ul><li>xfs(RHEL7.2及更高版本)，需要启用d_type=true。 &gt;具体详情参考 Docker Use the OverlayFS storage driver<br>编辑/etc/docker/daemon.json加入以下内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">&quot;storage-opts&quot;: [&quot;overlay2.override_kernel_check=true&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>配置日志驱动<br>容器在运行时会产生大量日志文件，很容易占满磁盘空间。通过配置日志驱动来限制文件大小与文件的数量。 </p><blockquote><p>限制单个日志文件为100M,最多产生3个日志文件:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">&quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;100m&quot;,</span><br><span class="line">    &quot;max-file&quot;: &quot;3&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Ubuntu-Debian系统-，docker-info提示WARNING-No-swap-limit-support"><a href="#Ubuntu-Debian系统-，docker-info提示WARNING-No-swap-limit-support" class="headerlink" title="Ubuntu\Debian系统 ，docker info提示WARNING: No swap limit support"></a>Ubuntu\Debian系统 ，docker info提示WARNING: No swap limit support</h3><p>Ubuntu\Debian系统下，默认cgroups未开启swap account功能，这样会导致设置容器内存或者swap资源限制不生效。可以通过以下命令解决:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i &apos;s/GRUB_CMDLINE_LINUX=&quot;/GRUB_CMDLINE_LINUX=&quot;cgroup_enable=memory swapaccount=1  /g&apos;  /etc/default/grub</span><br><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure></p><blockquote><p>注意<br>通过以上命令可自动配置参数，如果/etc/default/grub非默认配置，需根据实际参数做调整。<br>提示<br>以上配置完成后，建议重启一次主机。</p></blockquote><p>–</p><h3 id="我在本地-etc-docker-daemon-json文件内容："><a href="#我在本地-etc-docker-daemon-json文件内容：" class="headerlink" title="我在本地/etc/docker/daemon.json文件内容："></a>我在本地<code>/etc/docker/daemon.json</code>文件内容：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://7bezldxe.mirror.aliyuncs.com/&quot;,&quot;https://3v68smwd.mirror.aliyuncs.com&quot;],</span><br><span class="line">  &quot;max-concurrent-downloads&quot;: 3,</span><br><span class="line">  &quot;max-concurrent-uploads&quot;: 5,</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">  &quot;storage-opts&quot;: [&quot;overlay2.override_kernel_check=true&quot;],</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;100m&quot;,</span><br><span class="line">    &quot;max-file&quot;: &quot;3&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 记录几条可能用到的命令</span><br><span class="line">yum-config-manager --add-repo https://download.virtualbox.org/virtualbox/rpm/el/virtualbox.repo</span><br><span class="line">sudo yum clean all;yum makecache all</span><br><span class="line">yum install VirtualBox-6.0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-主机名配置&quot;&gt;&lt;a href=&quot;#1-主机名配置&quot; class=&quot;headerlink&quot; title=&quot;1. 主机名配置&quot;&gt;&lt;/a&gt;1. 主机名配置&lt;/h2&gt;&lt;p&gt;因为K8S的规定，主机名只支持包含 - 和 .(中横线和点)两种特殊符号，并且主机名不能出现重复。&lt;/p&gt;
&lt;h2 id=&quot;2-Hosts&quot;&gt;&lt;a href=&quot;#2-Hosts&quot; class=&quot;headerlink&quot; title=&quot;2. Hosts&quot;&gt;&lt;/a&gt;2. Hosts&lt;/h2&gt;&lt;p&gt;配置每台主机的hosts(/etc/hosts),添加host_ip $hostname到/etc/hosts文件中。&lt;/p&gt;
&lt;h2 id=&quot;3-CentOS关闭selinux&quot;&gt;&lt;a href=&quot;#3-CentOS关闭selinux&quot; class=&quot;headerlink&quot; title=&quot;3. CentOS关闭selinux&quot;&gt;&lt;/a&gt;3. CentOS关闭selinux&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sudo sed -i &amp;#39;s/SELINUX=enforcing/SELINUX=disabled/g&amp;#39; /etc/selinux/config&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://coder-michael.tk/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://coder-michael.tk/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>GitLab升级和数据迁移方案</title>
    <link href="http://coder-michael.tk/2019/05/05/GitLab/Gitlab%E5%8D%87%E7%BA%A7%E5%92%8C%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E6%96%B9%E6%A1%88/"/>
    <id>http://coder-michael.tk/2019/05/05/GitLab/Gitlab升级和数据迁移方案/</id>
    <published>2019-05-05T10:04:47.473Z</published>
    <updated>2019-05-05T09:07:54.011Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>不管是GitLab升级还是GitLab数据迁移，在实施之前我都必须要先做好Gitlab数据备份工作。</p></blockquote><p>我们先来看看如何做GitLab的数据备份与恢复。GitLab自身提供了数据备份和恢复的工具:gitlab-rake,具体使用见下文：</p><h2 id="GitLab的数据备份与恢复"><a href="#GitLab的数据备份与恢复" class="headerlink" title="GitLab的数据备份与恢复"></a>GitLab的数据备份与恢复</h2><p>GitLab自身提供了数据备份和恢复的工具:gitlab-rake,具体使用见下文：</p><h3 id="GitLab备份配置"><a href="#GitLab备份配置" class="headerlink" title="GitLab备份配置"></a>GitLab备份配置</h3><p>GitLab默认的备份目录是：<code>/var/opt/gitlab/backups/</code>，建议选择一个空间充足的目录进行配置。我们可以通过修改<code>/etc/gitlab/gitlab.rb</code>文件中的如下内容来调整备份路径:</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 备份目录</span><br><span class="line">gitlab_rails[&apos;backup_path&apos;] = &quot;/var/opt/gitlab/backups&quot;</span><br><span class="line"># 备份文件保留时间，单位：秒</span><br><span class="line">gitlab_rails[&apos;backup_keep_time&apos;] = 604800</span><br></pre></td></tr></table></figure><h3 id="GitLab数据备份"><a href="#GitLab数据备份" class="headerlink" title="GitLab数据备份"></a>GitLab数据备份</h3><h4 id="1-备份命令"><a href="#1-备份命令" class="headerlink" title="1. 备份命令"></a>1. 备份命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/gitlab/bin/gitlab-rake gitlab:backup:create CRON=1</span><br></pre></td></tr></table></figure><p>备份操作比较简单，实际备份的数据会包含：数据库脚本、代码仓库、wiki、大文件、ssh用户秘钥等数据。<code>An application data backup creates an archive file that contains the database,all repositories and all attachments.</code>  </p><h4 id="2-备份文件"><a href="#2-备份文件" class="headerlink" title="2. 备份文件"></a>2. 备份文件</h4><p>执行完备份命令后的备份数据是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@node00 backups]# ll</span><br><span class="line">total 127632268</span><br><span class="line">-rw------- 1 git git 43414650880 Nov 27 00:10 1543247502_2018_11_26_gitlab_backup.tar</span><br><span class="line">-rw------- 1 git git 43630172160 Nov 28 00:14 1543334067_2018_11_27_gitlab_backup.tar</span><br><span class="line">-rw------- 1 git git 43650590720 Nov 29 00:16 1543420454_2018_11_28_gitlab_backup.tar</span><br></pre></td></tr></table></figure></p><h3 id="GitLab数据恢复"><a href="#GitLab数据恢复" class="headerlink" title="GitLab数据恢复"></a>GitLab数据恢复</h3><h4 id="1-恢复命令"><a href="#1-恢复命令" class="headerlink" title="1.恢复命令"></a>1.恢复命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:restore BACKUP=备份文件编号</span><br></pre></td></tr></table></figure><h4 id="2-恢复步骤"><a href="#2-恢复步骤" class="headerlink" title="2.恢复步骤"></a>2.恢复步骤</h4><h5 id="a-确保备份和恢复的GitLab应用版本相同"><a href="#a-确保备份和恢复的GitLab应用版本相同" class="headerlink" title="a. 确保备份和恢复的GitLab应用版本相同"></a>a. 确保备份和恢复的GitLab应用版本相同</h5><blockquote><p>GitLab数据恢复需要确保新服务器上的GitLab的版本必须与创建备份时的Gitlab版本号相同. 比如新服务器安装的是9.1.2版本的GitLab, 那么迁移之前, 最好将旧服务器的GitLab 升级为9.1.2再进行备份.</p></blockquote><h5 id="b-copy旧服务器上面的备份文件到新服务器"><a href="#b-copy旧服务器上面的备份文件到新服务器" class="headerlink" title="b. copy旧服务器上面的备份文件到新服务器"></a>b. copy旧服务器上面的备份文件到新服务器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># scp用法</span><br><span class="line">scp 用户名@IP: 文件名1 远程用户名@IP: 文件名2</span><br><span class="line"># scp</span><br><span class="line">scp root@node00:/var/opt/gitlab/backups/1543420454_2018_11_28_gitlab_backup.tar .</span><br></pre></td></tr></table></figure><h5 id="c-恢复步骤"><a href="#c-恢复步骤" class="headerlink" title="c. 恢复步骤"></a>c. 恢复步骤</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># 1. 先赋权</span><br><span class="line">[root@node01 backups]# pwd</span><br><span class="line">/apps/dbdat/gitlab/backups</span><br><span class="line">[root@node01 backups]# chown git.root /apps/dbdat/gitlab/backups</span><br><span class="line">[root@node01 gitlab]# chmod 700 /apps/dbdat/gitlab/backups</span><br><span class="line">[root@node01 gitlab]# ll /apps/dbdat/gitlab/</span><br><span class="line">total 8</span><br><span class="line">drwx------ 2 git root 4096 Nov 29 10:30 backups</span><br><span class="line">[root@node01 backups]# chown git.git 1543334067_2018_11_27_gitlab_backup.tar </span><br><span class="line">[root@node01 backups]# chmod 600 1543334067_2018_11_27_gitlab_backup.tar </span><br><span class="line">[root@node01 backups]# ll</span><br><span class="line">total 42607596</span><br><span class="line">-rw------- 1 git git 43630172160 Nov 28 00:14 1543334067_2018_11_27_gitlab_backup.tar</span><br><span class="line"># 2. 执行恢复前，停止GitLab与数据库的连接，保留其他进程。</span><br><span class="line">[root@node01 backups]# gitlab-ctl stop unicorn</span><br><span class="line">[root@node01 backups]# gitlab-ctl stop sidekiq</span><br><span class="line"># Verify</span><br><span class="line">[root@node01 backups]# gitlab-ctl status</span><br><span class="line"></span><br><span class="line"># 3. 执行恢复命令</span><br><span class="line">[root@node01 backups]# gitlab-rake gitlab:backup:restore BACKUP=1543334067_2018_11_27</span><br><span class="line">Unpacking backup ... done</span><br><span class="line">Before restoring the database we recommend removing all existing</span><br><span class="line">tables to avoid future upgrade problems. Be aware that if you have</span><br><span class="line">custom tables in the GitLab database these tables and all data will be</span><br><span class="line">removed.</span><br><span class="line"></span><br><span class="line">Do you want to continue (yes/no)? yes</span><br><span class="line">Removing all tables. Press `Ctrl-C` within 5 seconds to abort</span><br><span class="line">...</span><br><span class="line"># 后面一路yes，覆盖数据库、覆盖仓库、生成sshkey</span><br><span class="line"># </span><br><span class="line"># 恢复完成后要记得重启Gitlab</span><br><span class="line">[root@node01 backups]# gitlab-ctl restart</span><br></pre></td></tr></table></figure><h2 id="GitLab版本升级"><a href="#GitLab版本升级" class="headerlink" title="GitLab版本升级"></a>GitLab版本升级</h2><blockquote><p>建议升级前按照钱数备份方式，先对GitLab数据进行备份，同时备份GitLab配置文件<code>/etc/gitlab/gitlab.rb</code>,然后再执行下列步骤。</p></blockquote><h3 id="1-关闭部分GitLab服务"><a href="#1-关闭部分GitLab服务" class="headerlink" title="1. 关闭部分GitLab服务"></a>1. 关闭部分GitLab服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop sidekiq</span><br><span class="line">gitlab-ctl stop nginx</span><br></pre></td></tr></table></figure><h3 id="2-升级GitLab"><a href="#2-升级GitLab" class="headerlink" title="2. 升级GitLab"></a>2. 升级GitLab</h3><p>GitLab 升级包下载地址：<code>https://packages.gitlab.com/gitlab/gitlab-ce</code>。下载好需要的版本上传至服务器，直接运行下列命令安装就可以了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh gitlab-ce-10.0.4-ce.0.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="3-重新配置GitLab"><a href="#3-重新配置GitLab" class="headerlink" title="3. 重新配置GitLab"></a>3. 重新配置GitLab</h3><p>安装完成后，根据需要修改配置文件<code>/etc/gitlab/gitlab.rb</code>，也可以直接使用原来备份好的<code>gitlab.rb</code>文件，执行重新配置命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure><h3 id="4-重启GitLab"><a href="#4-重启GitLab" class="headerlink" title="4. 重启GitLab"></a>4. 重启GitLab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure><h2 id="GitLab数据迁移"><a href="#GitLab数据迁移" class="headerlink" title="GitLab数据迁移"></a>GitLab数据迁移</h2><p>GitLab数据迁移过程参照GitLab数据备份与恢复步骤操作就好了。</p><h5 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h5><p><a href="https://gitlab.com/help/raketasks/backup_restore.md" target="_blank" rel="noopener">https://gitlab.com/help/raketasks/backup_restore.md</a><br><a href="https://blog.csdn.net/ouyang_peng/article/details/77070977" target="_blank" rel="noopener">https://blog.csdn.net/ouyang_peng/article/details/77070977</a></p><h4 id="实验命令"><a href="#实验命令" class="headerlink" title="实验命令"></a>实验命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /apps/data/gitlab/config /apps/data/gitlab/logs  /apps/data/gitlab/data</span><br><span class="line"></span><br><span class="line">docker run --detach \</span><br><span class="line">  --hostname 10.16.91.115 \</span><br><span class="line">  --publish 443:443 --publish 80:80 --publish 22222:22 \</span><br><span class="line">  --name gitlab \</span><br><span class="line">  --restart always \</span><br><span class="line">  --volume /apps/data/gitlab/config:/etc/gitlab \</span><br><span class="line">  --volume /apps/data/gitlab/logs:/var/log/gitlab \</span><br><span class="line">  --volume /apps/data/gitlab/data:/var/opt/gitlab \</span><br><span class="line">  gitlab/gitlab-ce:9.0.0-ce.0</span><br></pre></td></tr></table></figure><p>查看GitLab版本的两个方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /opt/gitlab/embedded/service/gitlab-rails/VERSION</span><br><span class="line"></span><br><span class="line">sudo gitlab-rake gitlab:env:info</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;不管是GitLab升级还是GitLab数据迁移，在实施之前我都必须要先做好Gitlab数据备份工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们先来看看如何做GitLab的数据备份与恢复。GitLab自身提供了数据备份和恢复的工具:gitlab-rake,具体使用见下文：&lt;/p&gt;
&lt;h2 id=&quot;GitLab的数据备份与恢复&quot;&gt;&lt;a href=&quot;#GitLab的数据备份与恢复&quot; class=&quot;headerlink&quot; title=&quot;GitLab的数据备份与恢复&quot;&gt;&lt;/a&gt;GitLab的数据备份与恢复&lt;/h2&gt;&lt;p&gt;GitLab自身提供了数据备份和恢复的工具:gitlab-rake,具体使用见下文：&lt;/p&gt;
&lt;h3 id=&quot;GitLab备份配置&quot;&gt;&lt;a href=&quot;#GitLab备份配置&quot; class=&quot;headerlink&quot; title=&quot;GitLab备份配置&quot;&gt;&lt;/a&gt;GitLab备份配置&lt;/h3&gt;&lt;p&gt;GitLab默认的备份目录是：&lt;code&gt;/var/opt/gitlab/backups/&lt;/code&gt;，建议选择一个空间充足的目录进行配置。我们可以通过修改&lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;文件中的如下内容来调整备份路径:&lt;/p&gt;
    
    </summary>
    
      <category term="GitLab" scheme="http://coder-michael.tk/categories/GitLab/"/>
    
    
      <category term="GitLab" scheme="http://coder-michael.tk/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes Yaml Template</title>
    <link href="http://coder-michael.tk/2019/05/05/Kubernetes/Kubernetes-Yaml-Template/"/>
    <id>http://coder-michael.tk/2019/05/05/Kubernetes/Kubernetes-Yaml-Template/</id>
    <published>2019-05-05T09:22:42.000Z</published>
    <updated>2019-05-05T09:31:36.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx-pod-yaml"><a href="#nginx-pod-yaml" class="headerlink" title="nginx-pod.yaml"></a><code>nginx-pod.yaml</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="webapp-rc-yaml"><a href="#webapp-rc-yaml" class="headerlink" title="webapp-rc.yaml"></a><code>webapp-rc.yaml</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ReplicationController</span><br><span class="line">metadata:</span><br><span class="line">  name: webapp</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    app: webapp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: webapp</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: webapp</span><br><span class="line">          image: kubeguide/tomcat-app:v2</span><br><span class="line">          ports:</span><br><span class="line">          - containerPort: 8080</span><br><span class="line">          env:</span><br><span class="line">          - name: MYSQL_SERVICE_HOST</span><br><span class="line">            value: &apos;mysql&apos;</span><br></pre></td></tr></table></figure><h2 id="webapp-svc-yaml"><a href="#webapp-svc-yaml" class="headerlink" title="webapp-svc.yaml"></a><code>webapp-svc.yaml</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: mywebapp</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 8080</span><br><span class="line">      nodePort: 30001</span><br><span class="line">  selector:</span><br><span class="line">    app: webapp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;nginx-pod-yaml&quot;&gt;&lt;a href=&quot;#nginx-pod-yaml&quot; class=&quot;headerlink&quot; title=&quot;nginx-pod.yaml&quot;&gt;&lt;/a&gt;&lt;code&gt;nginx-pod.yaml&lt;/code&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: Pod&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  containers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - name: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imagePullPolicy: IfNotPresent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - containerPort: 80&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Kubernetes" scheme="http://coder-michael.tk/categories/Kubernetes/"/>
    
    
      <category term="Kubernetes" scheme="http://coder-michael.tk/tags/Kubernetes/"/>
    
      <category term="Template" scheme="http://coder-michael.tk/tags/Template/"/>
    
  </entry>
  
</feed>
